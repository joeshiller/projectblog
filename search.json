[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "coupsblog",
    "section": "",
    "text": "Coups blog post\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nAug 2, 2024\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nJul 30, 2024\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/DataAnalysis.html",
    "href": "posts/DataAnalysis.html",
    "title": "Coups blog post",
    "section": "",
    "text": "This project aims to analyze coup events across various countries. The dataset includes information about coups, including the date, type of event (coup, attempted, conspiracy), and various outcomes (e.g., realized, unrealized, injuries, deaths).\n\nMotivation\nunderstanding the patterns and impacts of coup events can help in analyzing political stability and the factors contributing to successful or failed coups.\n\n\nQuestions\n\nWhich countries have experienced the most coup events?\nHow do the types of coup events vary across different countries and time periods?\nAre there any noticeable patterns or outliers in the data?\n\n\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Load the data\ndata = pd.read_csv('/home/jovyan/DH140-Final-Project/Coup data.csv')\ndata['date'] = pd.to_datetime(data[['year', 'month', 'day']])\n\n# Manually create a comprehensive dictionary to map countries to continents\ncountry_to_continent = {\n    'Afghanistan': 'Asia',\n    'Albania': 'Europe',\n    'Algeria': 'Africa',\n    'Angola': 'Africa',\n    'Argentina': 'South America',\n    'Armenia': 'Asia',\n    'Australia': 'Oceania',\n    'Austria': 'Europe',\n    'Azerbaijan': 'Asia',\n    'Bahamas': 'North America',\n    'Bahrain': 'Asia',\n    'Bangladesh': 'Asia',\n    'Barbados': 'North America',\n    'Belarus': 'Europe',\n    'Belgium': 'Europe',\n    'Belize': 'North America',\n    'Benin': 'Africa',\n    'Bhutan': 'Asia',\n    'Bolivia': 'South America',\n    'Bosnia and Herzegovina': 'Europe',\n    'Botswana': 'Africa',\n    'Brazil': 'South America',\n    'Brunei': 'Asia',\n    'Bulgaria': 'Europe',\n    'Burkina Faso': 'Africa',\n    'Burundi': 'Africa',\n    'Cabo Verde': 'Africa',\n    'Cambodia': 'Asia',\n    'Cameroon': 'Africa',\n    'Canada': 'North America',\n    'Central African Republic': 'Africa',\n    'Chad': 'Africa',\n    'Chile': 'South America',\n    'China': 'Asia',\n    'Colombia': 'South America',\n    'Comoros': 'Africa',\n    'Congo': 'Africa',\n    'Costa Rica': 'North America',\n    'Croatia': 'Europe',\n    'Cuba': 'North America',\n    'Cyprus': 'Asia',\n    'Czech Republic': 'Europe',\n    'Denmark': 'Europe',\n    'Djibouti': 'Africa',\n    'Dominica': 'North America',\n    'Dominican Republic': 'North America',\n    'Ecuador': 'South America',\n    'Egypt': 'Africa',\n    'El Salvador': 'North America',\n    'Equatorial Guinea': 'Africa',\n    'Eritrea': 'Africa',\n    'Estonia': 'Europe',\n    'Eswatini': 'Africa',\n    'Ethiopia': 'Africa',\n    'Fiji': 'Oceania',\n    'Finland': 'Europe',\n    'France': 'Europe',\n    'Gabon': 'Africa',\n    'Gambia': 'Africa',\n    'Georgia': 'Asia',\n    'Germany': 'Europe',\n    'Ghana': 'Africa',\n    'Greece': 'Europe',\n    'Grenada': 'North America',\n    'Guatemala': 'North America',\n    'Guinea': 'Africa',\n    'Guinea-Bissau': 'Africa',\n    'Guyana': 'South America',\n    'Haiti': 'North America',\n    'Honduras': 'North America',\n    'Hungary': 'Europe',\n    'Iceland': 'Europe',\n    'India': 'Asia',\n    'Indonesia': 'Asia',\n    'Iran': 'Asia',\n    'Iraq': 'Asia',\n    'Ireland': 'Europe',\n    'Israel': 'Asia',\n    'Italy': 'Europe',\n    'Ivory Coast': 'Africa',\n    'Jamaica': 'North America',\n    'Japan': 'Asia',\n    'Jordan': 'Asia',\n    'Kazakhstan': 'Asia',\n    'Kenya': 'Africa',\n    'Kiribati': 'Oceania',\n    'Kuwait': 'Asia',\n    'Kyrgyzstan': 'Asia',\n    'Laos': 'Asia',\n    'Latvia': 'Europe',\n    'Lebanon': 'Asia',\n    'Lesotho': 'Africa',\n    'Liberia': 'Africa',\n    'Libya': 'Africa',\n    'Liechtenstein': 'Europe',\n    'Lithuania': 'Europe',\n    'Luxembourg': 'Europe',\n    'Madagascar': 'Africa',\n    'Malawi': 'Africa',\n    'Malaysia': 'Asia',\n    'Maldives': 'Asia',\n    'Mali': 'Africa',\n    'Malta': 'Europe',\n    'Marshall Islands': 'Oceania',\n    'Mauritania': 'Africa',\n    'Mauritius': 'Africa',\n    'Mexico': 'North America',\n    'Micronesia': 'Oceania',\n    'Moldova': 'Europe',\n    'Monaco': 'Europe',\n    'Mongolia': 'Asia',\n    'Montenegro': 'Europe',\n    'Morocco': 'Africa',\n    'Mozambique': 'Africa',\n    'Myanmar': 'Asia',\n    'Namibia': 'Africa',\n    'Nauru': 'Oceania',\n    'Nepal': 'Asia',\n    'Netherlands': 'Europe',\n    'New Zealand': 'Oceania',\n    'Nicaragua': 'North America',\n    'Niger': 'Africa',\n    'Nigeria': 'Africa',\n    'North Korea': 'Asia',\n    'North Macedonia': 'Europe',\n    'Norway': 'Europe',\n    'Oman': 'Asia',\n    'Pakistan': 'Asia',\n    'Palau': 'Oceania',\n    'Panama': 'North America',\n    'Papua New Guinea': 'Oceania',\n    'Paraguay': 'South America',\n    'Peru': 'South America',\n    'Philippines': 'Asia',\n    'Poland': 'Europe',\n    'Portugal': 'Europe',\n    'Qatar': 'Asia',\n    'Romania': 'Europe',\n    'Russia': 'Europe',\n    'Rwanda': 'Africa',\n    'Saint Kitts and Nevis': 'North America',\n    'Saint Lucia': 'North America',\n    'Saint Vincent and the Grenadines': 'North America',\n    'Samoa': 'Oceania',\n    'San Marino': 'Europe',\n    'Sao Tome and Principe': 'Africa',\n    'Saudi Arabia': 'Asia',\n    'Senegal': 'Africa',\n    'Serbia': 'Europe',\n    'Seychelles': 'Africa',\n    'Sierra Leone': 'Africa',\n    'Singapore': 'Asia',\n    'Slovakia': 'Europe',\n    'Slovenia': 'Europe',\n    'Solomon Islands': 'Oceania',\n    'Somalia': 'Africa',\n    'South Africa': 'Africa',\n    'South Korea': 'Asia',\n    'South Sudan': 'Africa',\n    'Spain': 'Europe',\n    'Sri Lanka': 'Asia',\n    'Sudan': 'Africa',\n    'Suriname': 'South America',\n    'Sweden': 'Europe',\n    'Switzerland': 'Europe',\n    'Syria': 'Asia',\n    'Taiwan': 'Asia',\n    'Tajikistan': 'Asia',\n    'Tanzania': 'Africa',\n    'Thailand': 'Asia',\n    'Timor-Leste': 'Asia',\n    'Togo': 'Africa',\n    'Tonga': 'Oceania',\n    'Trinidad and Tobago': 'North America',\n    'Tunisia': 'Africa',\n    'Turkey': 'Asia',\n    'Turkmenistan': 'Asia',\n    'Tuvalu': 'Oceania',\n    'Uganda': 'Africa',\n    'Ukraine': 'Europe',\n    'United Arab Emirates': 'Asia',\n    'United Kingdom': 'Europe',\n    'United States': 'North America',\n    'Uruguay': 'South America',\n    'Uzbekistan': 'Asia',\n    'Vanuatu': 'Oceania',\n    'Vatican City': 'Europe',\n    'Venezuela': 'South America',\n    'Vietnam': 'Asia',\n    'Yemen': 'Asia',\n    'Zambia': 'Africa',\n    'Zimbabwe': 'Africa'\n}\n\n# Function to get the continent name\ndef get_continent(country_name):\n    return country_to_continent.get(country_name, 'Unknown')\n\n# Add a continent column\ndata['continent'] = data['country'].apply(get_continent)\n\n# Display basic information and summary statistics\nprint(data.info())\nprint(data.describe())\n\n# Check for missing values\nprint(data.isnull().sum())\n\n\n# 1. Distribution of coup events by country\nplt.figure(figsize=(15, 30))\nsns.countplot(y='country', data=data, order=data['country'].value_counts().index)\nplt.title('Distribution of Coup Events by Country')\nplt.show()\n\n# 2. Trend of coup events over time by event type\nplt.figure(figsize=(15, 8))\ndata['year'] = data['date'].dt.year\nevent_type_counts = data.groupby(['year', 'event_type']).size().reset_index(name='counts')\nsns.lineplot(x='year', y='counts', hue='event_type', data=event_type_counts)\nplt.title('Trend of Coup Events Over Time by Event Type')\nplt.xticks(rotation=45)\nplt.show()\n\n# 3. Heatmap of coup events by country and year\nplt.figure(figsize=(15, 8))\ncontinent_counts = data[data['event_type'] == 'attempted'].groupby('continent').size().reset_index(name='counts')\nsns.barplot(x='continent', y='counts', data=continent_counts)\nplt.title('Number of Coup Attempts by Continent')\nplt.xticks(rotation=45)\nplt.show()\n\n# 4. Top 10 countries with the most coup events\ntop_countries = data['country'].value_counts().head(10)\nplt.figure(figsize=(10, 6))\nsns.barplot(x=top_countries.values, y=top_countries.index)\nplt.title('Top 10 Countries with the Most Coup Events')\nplt.show()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 981 entries, 0 to 980\nData columns (total 31 columns):\n #   Column      Non-Null Count  Dtype         \n---  ------      --------------  -----         \n 0   coup_id     981 non-null    object        \n 1   cowcode     981 non-null    int64         \n 2   country     981 non-null    object        \n 3   year        981 non-null    int64         \n 4   month       981 non-null    int64         \n 5   day         981 non-null    int64         \n 6   event_type  981 non-null    object        \n 7   unrealized  981 non-null    int64         \n 8   realized    981 non-null    int64         \n 9   conspiracy  981 non-null    int64         \n 10  attempt     981 non-null    int64         \n 11  military    981 non-null    int64         \n 12  dissident   981 non-null    int64         \n 13  rebel       981 non-null    int64         \n 14  palace      981 non-null    int64         \n 15  foreign     981 non-null    int64         \n 16  auto        981 non-null    int64         \n 17  resign      981 non-null    int64         \n 18  popular     981 non-null    int64         \n 19  counter     981 non-null    int64         \n 20  other       981 non-null    int64         \n 21  noharm      981 non-null    int64         \n 22  injured     981 non-null    int64         \n 23  killed      981 non-null    int64         \n 24  harrest     981 non-null    int64         \n 25  jailed      981 non-null    int64         \n 26  tried       981 non-null    int64         \n 27  fled        981 non-null    int64         \n 28  exile       981 non-null    int64         \n 29  date        981 non-null    datetime64[ns]\n 30  continent   981 non-null    object        \ndtypes: datetime64[ns](1), int64(26), object(4)\nmemory usage: 237.7+ KB\nNone\n          cowcode         year       month         day  unrealized  \\\ncount  981.000000   981.000000  981.000000  981.000000  981.000000   \nmean   439.515800  1979.112130    6.574924   15.873598    0.550459   \nmin      2.000000  1945.000000    1.000000    1.000000    0.000000   \n25%    160.000000  1964.000000    3.000000    8.000000    0.000000   \n50%    461.000000  1978.000000    7.000000   16.000000    1.000000   \n75%    630.000000  1992.000000   10.000000   23.000000    1.000000   \nmax    950.000000  2022.000000   12.000000   31.000000    1.000000   \nstd    244.434234    19.291419    3.536074    8.804239    0.497701   \n\n         realized  conspiracy     attempt    military   dissident  ...  \\\ncount  981.000000  981.000000  981.000000  981.000000  981.000000  ...   \nmean     0.449541    0.194699    0.355759    0.602446    0.298675  ...   \nmin      0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n25%      0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n50%      0.000000    0.000000    0.000000    1.000000    0.000000  ...   \n75%      1.000000    0.000000    1.000000    1.000000    1.000000  ...   \nmax      1.000000    1.000000    1.000000    1.000000    1.000000  ...   \nstd      0.497701    0.396171    0.478987    0.489642    0.457910  ...   \n\n            other      noharm     injured      killed     harrest      jailed  \\\ncount  981.000000  981.000000  981.000000  981.000000  981.000000  981.000000   \nmean     0.016310    0.949032    0.008155    0.042813    0.041794    0.055046   \nmin      0.000000    0.000000    0.000000    0.000000    0.000000    0.000000   \n25%      0.000000    1.000000    0.000000    0.000000    0.000000    0.000000   \n50%      0.000000    1.000000    0.000000    0.000000    0.000000    0.000000   \n75%      0.000000    1.000000    0.000000    0.000000    0.000000    0.000000   \nmax      1.000000    1.000000    1.000000    1.000000    1.000000    1.000000   \nstd      0.126729    0.220045    0.089982    0.202540    0.200220    0.228186   \n\n            tried        fled       exile                           date  \ncount  981.000000  981.000000  981.000000                            981  \nmean     0.010194    0.078491    0.048930  1979-08-13 22:08:26.422018368  \nmin      0.000000    0.000000    0.000000            1945-10-29 00:00:00  \n25%      0.000000    0.000000    0.000000            1964-04-19 00:00:00  \n50%      0.000000    0.000000    0.000000            1978-04-27 00:00:00  \n75%      0.000000    0.000000    0.000000            1992-02-04 00:00:00  \nmax      1.000000    1.000000    1.000000            2022-12-29 00:00:00  \nstd      0.100499    0.269080    0.215831                            NaN  \n\n[8 rows x 27 columns]\ncoup_id       0\ncowcode       0\ncountry       0\nyear          0\nmonth         0\nday           0\nevent_type    0\nunrealized    0\nrealized      0\nconspiracy    0\nattempt       0\nmilitary      0\ndissident     0\nrebel         0\npalace        0\nforeign       0\nauto          0\nresign        0\npopular       0\ncounter       0\nother         0\nnoharm        0\ninjured       0\nkilled        0\nharrest       0\njailed        0\ntried         0\nfled          0\nexile         0\ndate          0\ncontinent     0\ndtype: int64"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  }
]